{"version":3,"sources":["components/StickyNavbar.js","formValidators.js","components/formElements/RenderField.js","components/formElements/RenderCheckBoxes.js","components/SimpleSearch.js","components/formElements/RenderRadio.js","components/AdvancedSearch.js","reducers/searchReducer.js","components/SearchPanel.js","gitQueryFunctions.js","components/LangCell.js","components/RepoRow.js","components/SortControl.js","components/PagerControl.js","components/ResultPanel.js","components/pages/SearchPage.js","components/pages/HistoryPage.js","components/App.js","reducers/historyReducer.js","reducers/loaderReducer.js","index.js"],"names":["StickyNavbar","props","Navbar","bg","variant","sticky","Brand","Nav","className","Container","fluid","Row","Col","to","Link","Dropdown","DropdownButton","id","drop","title","Item","required","value","undefined","lengthMin","length","number","isNaN","Number","validateSimpleForm","values","errors","name","description","readme","filter","searchReq","searchValue","searchMin","validateNumberInput","key","numberFilled","errorNum","validateMaxNumberInput","minKey","maxFilled","parseInt","validateTextInput","oneFilled","errorMin","validateAdvancedForm","starsNumberFilled","sizeNumberFilled","validateLangTextInput","starCheck","starsMaxFilled","sizeCheck","sizeMaxFilled","isFilled","validateLastTextInput","RenderField","input","label","type","meta","touched","error","warning","placeholder","RenderCheckBoxes","submitting","Field","component","htmlFor","SimpleSearch","handleSubmit","reset","pristine","valid","onReset","onTypeToggle","isLoading","useSelector","state","search","onSubmit","xs","lg","validate","Button","size","disabled","color","onClick","reduxForm","destroyOnUnmount","forceUnregisterOnUnmount","form","connect","initialValues","simpleSearch","dispatch","change","RenderRadio","AdvancedSearch","starsCheckedVal","sizeCheckedVal","selector","formValueSelector","starCheckValFromState","sizeCheckValFromState","initialState","repos","isloading","searchHistory","currPage","orderBy","sortBy","itemTransformer","item","full_name","html_url","stars","stargazers_count","forks","language","languages_url","owner","login","created_at","updated_at","owner_html_url","owner_avatar_url","avatar_url","searchReducer","action","total","payload","result","total_count","items","map","links","parseLinkHeader","last","lastPage","page","skipHistory","push","queryString","url","response","status","data","message","headers","limitRemain","limitUsed","currTime","Math","round","Date","getTime","resetTime","remainingSecs","errorType","Array","isArray","customErrorType","SearchPanel","handleSimpleSubmit","simpleFormErrors","Object","keys","errorMessage","validationError","startSearch","searchClick","pageSize","searchInitState","handleAdvancedSubmit","advancedFormErrors","changeTypeToSimple","typeChange","changeTypeToAvanced","handleReset","initState","this","isError","Alert","React","Component","withRouter","loadPage","orderByParam","sortByParam","isAdvanced","gitQueryString","user","org","lang","topic","starsNumber","starsMax","sizeNumber","sizeMax","advancedSearchQuery","simpleSearchQuery","encodedQueryString","axios","get","getApiSearchResults","encodeURIComponent","then","config","catch","errorObj","newType","LangCell","langUrl","langList","loader","useDispatch","useState","isFetchStarted","setFetchStarted","useEffect","idx","RepoRow","repo","href","target","src","process","substring","alt","width","keyProp","SortControl","totalResult","selectedValue","onChange","val","newUrl","replace","PagerControl","startPaging","pageType","newPage","first","event","prev","next","ResultPanel","spinningLoader","includeControls","repoIdx","HistoryPage","history","selectedItems","selectedIindex","selectedIndex","mapIdx","index","rows","maxLength","readOnly","App","document","basename","exact","path","SearchPage","historyReducer","loaderReducer","reducers","formReducer","reducer","combineReducers","store","createStore","historyInitState","loaderInitState","composeWithDevTools","applyMiddleware","thunk","render","getElementById"],"mappings":"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","file":"static/js/main.145c2d18.chunk.js","sourcesContent":["import { Navbar, Nav, Dropdown, DropdownButton, Col, Row, Container } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\n/**\n * Component for navigation menus\n * @param {*} props \n */\nfunction StickyNavbar(props) {\n    return <Navbar bg=\"primary\" variant=\"dark\" sticky=\"top\" >\n        <Navbar.Brand>Repo Search App</Navbar.Brand>\n        <Nav className=\"mr-auto navbarOuter\">\n            <Container fluid className=\"horNavContainer\">\n                <Row className=\"horNavRow\">\n                    <Col className=\"horNavLinkCol\">\n                        <LinkContainer to=\"/search\">\n                            <Nav.Link className=\"horNav\">Search</Nav.Link>\n                        </LinkContainer>\n                        <LinkContainer to=\"/history\">\n                            <Nav.Link className=\"horNav\">History</Nav.Link>\n                        </LinkContainer>\n                    </Col>\n                    <Col className=\"vertNavDropCol\">\n                        <Dropdown>\n                            <DropdownButton\n                                \n                                key=\"vertMenu\"\n                                id={`dropdown-button-drop-vert`}\n                                drop=\"left\"\n                                title=\" \" >\n                                <Dropdown.Item>\n                                    <LinkContainer to=\"/page1\">\n                                        <Nav.Link className=\"vertNav\">Page 1</Nav.Link>\n                                    </LinkContainer>\n                                </Dropdown.Item>\n                                <Dropdown.Item>\n                                    <LinkContainer to=\"/page2\">\n                                        <Nav.Link className=\"vertNav\">Page 2</Nav.Link>\n                                    </LinkContainer>\n                                </Dropdown.Item>\n                            </DropdownButton>\n                        </Dropdown>\n                    </Col>\n                </Row>\n            </Container>\n        </Nav>\n    </Navbar>\n}\n\nexport default StickyNavbar;\n","\nconst required = (value) => value ? undefined : 'Required!'\n\nconst lengthMin = (value) =>\n    value && value.length > 2 ? undefined : `Must be at least 3 char.`\n\nconst number = value =>\n    value && isNaN(Number(value)) ? 'Must be a number' : undefined\n\n/**\n * Validates the simpel search form\n * @param {*} values \n */\nconst validateSimpleForm = values => {\n    const errors = {}\n    // console.log('Simple form validate....', values);\n    if (!values || !(values.name || values.description || values.readme)) {\n        // console.log('Checkbox group invalid! ');\n        errors.filter = 'Select at least one of the filters!';\n    }\n    const searchReq = required(values.searchValue);\n    if (searchReq) {\n        errors.searchValue = searchReq;\n    } else {\n        const searchMin = lengthMin(values.searchValue);\n        if (searchMin) {\n            errors.searchValue = searchMin;\n        }\n    }\n    return errors\n}\n\n/**\n * Languages can be shorter than 3 character like 'C'...\n * @param {*} values \n * @param {*} key \n * @param {*} errors \n * @param {*} oneFilled \n */\nconst validateLangTextInput = (values, key, errors, oneFilled) => {\n    if (values[key] && (values[key] !== \"\")) {\n        oneFilled = true;\n    }\n    return oneFilled;\n}\n\n/**\n * Validates number text input\n * @param {*} values \n * @param {*} key \n * @param {*} errors \n */\nconst validateNumberInput = (values, key, errors) => {\n    let numberFilled = false;\n    if (values[key] && (values[key] !== \"\")) {\n        const errorNum = number(values[key]);\n        if (errorNum) {\n            errors[key] = errorNum;\n        } else {\n            numberFilled = true;\n        }\n    }\n    return numberFilled;\n}\n\n/**\n * Validates number imput which has a minvalue in an other form element\n * @param {*} values \n * @param {*} key \n * @param {*} errors \n * @param {*} minKey min value form element key\n */\nconst validateMaxNumberInput = (values, key, errors, minKey) => {\n    let maxFilled = false;\n    if ( values[key] && (values[key] !== \"\")) {\n        // console.log('Max filled ' + key, values[key]);\n        const errorNum = number(values[key]);\n        if (errorNum) {\n            errors[key] = errorNum;\n        } else {\n            const minNum = Number.parseInt(values[minKey], 10);\n            const maxNum = Number.parseInt(values[key], 10);\n            if (!(minNum < maxNum)) {\n                errors[minKey] = 'Max should be greater number than Min'\n            } else {\n                maxFilled = true;\n            }\n        } \n    } else {\n        errors[minKey] = 'If Min filled, Max also needs to be filled';\n    }\n    return maxFilled;\n}\n\n/**\n * Validates a normal text input\n * @param {*} values \n * @param {*} key \n * @param {*} errors \n * @param {*} oneFilled \n */\nconst validateTextInput = (values, key, errors, oneFilled) => {\n    if (values[key] && (values[key] !== \"\")) {\n        const errorMin = lengthMin(values[key]);\n        if (errorMin) {\n            errors[key] = errorMin;\n        } else {\n            oneFilled = true;\n        }\n    }\n    return oneFilled;\n}\n\n/**\n * Validates text input and if nothing filled yet writes error here,\n * as there is no way to show cross input errors, only field level errors.\n * @param {*} values \n * @param {*} key \n * @param {*} errors \n * @param {*} oneFilled \n */\nconst validateLastTextInput = (values, key, errors, oneFilled) => {\n    const isFilled = validateTextInput(values, key, errors, oneFilled);\n    if (!isFilled && !errors[key]) {\n        errors[key] = 'Fill at least one search option!'\n    }\n    return isFilled;\n}\n\n/**\n * Validates the advanced search form\n * @param {*} values \n */\nconst validateAdvancedForm = values => {\n    const errors = {}\n    // console.log('Advanced validate....', values);\n    let oneFilled = false;\n    let starsNumberFilled = false;\n    let sizeNumberFilled = false;\n\n    if (values.searchValue && (values.searchValue !== \"\")) {\n        const searchMin = lengthMin(values.searchValue);\n        if (searchMin) {\n            errors.searchValue = searchMin\n        } else {\n            if (!values || !(values.name || values.description || values.readme)) {\n                // console.log('Checkbox group invalid! ');\n                errors.filter = 'Select at least one of the filters!';\n            } else {\n                oneFilled = true;\n            }\n        }\n    }\n\n    oneFilled =  oneFilled || validateTextInput(values, 'user', errors, oneFilled);\n    oneFilled =  oneFilled || validateLangTextInput(values, 'lang', errors, oneFilled);\n    oneFilled =  oneFilled || validateTextInput(values, 'topic', errors, oneFilled);\n    starsNumberFilled = validateNumberInput(values, 'starsNumber', errors);\n    oneFilled =  oneFilled || starsNumberFilled;\n    if (values.starCheck === 'between' && starsNumberFilled)  {\n        const starsMaxFilled = validateMaxNumberInput(values, 'starsMax', errors, 'starsNumber');\n        oneFilled = oneFilled || starsMaxFilled;\n    }\n    sizeNumberFilled = validateNumberInput(values, 'sizeNumber', errors);\n    oneFilled =  oneFilled || sizeNumberFilled;\n    if (values.sizeCheck === 'between' && sizeNumberFilled)  {\n        const sizeMaxFilled = validateMaxNumberInput(values, 'sizeMax', errors, 'sizeNumber');\n        oneFilled = oneFilled || sizeMaxFilled;\n    }\n    validateLastTextInput(values, 'org', errors, oneFilled);\n    // console.log(`starsNumberFilled:${starsNumberFilled} sizeNumberFilled:${sizeNumberFilled} Errors: `, errors);\n    return errors\n}\n\nexport { required, lengthMin, number, validateSimpleForm, validateAdvancedForm };\n","import React from 'react';\r\n\r\n/**\r\n * General input field for redux form\r\n * @param {*} param0 \r\n */\r\nexport const RenderField = ({ className, input, label, type, meta: { touched, error, warning } }) => (\r\n    <span className={className}>\r\n        <input {...input} placeholder={label} type={type} />\r\n        <div className=\"inputErrorHolder\">\r\n            {touched && ((error && <span className=\"errorMsg\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </span>\r\n)","import React from 'react';\r\nimport { Field } from 'redux-form';\r\n\r\n/**\r\n * Custom checkbox group holder component for filter options\r\n * @param {*} param0 \r\n */\r\nexport const RenderCheckBoxes = ({ input, label, type, meta: { touched, error, warning, submitting } }) => {\r\n\r\n    return <div>\r\n        <div className=\"filterCell\">\r\n            <span> In: </span>\r\n            <span className=\"filterCheckItem\">\r\n                <Field name=\"name\" id=\"name\" component=\"input\" type=\"checkbox\" />\r\n                <label htmlFor=\"name\">name </label>\r\n            </span>\r\n\r\n            <span className=\"filterCheckItem\">\r\n                <Field name=\"description\" id=\"description\" component=\"input\" type=\"checkbox\" />\r\n                <label htmlFor=\"description\">description </label>\r\n            </span>\r\n\r\n            <span className=\"filterCheckItem\">\r\n                <Field name=\"readme\" id=\"readme\" component=\"input\" type=\"checkbox\" />\r\n                <label htmlFor=\"readme\">readme </label>\r\n            </span>\r\n        </div>\r\n        <div className=\"filterCellError\">\r\n            {((error && <span className=\"errorMsg\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\nimport { Field, reduxForm, change } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Search, ArrowDownSquareFill } from 'react-bootstrap-icons';\nimport { useSelector } from \"react-redux\";\nimport { required, lengthMin, validateSimpleForm } from '../formValidators';\nimport { RenderField } from './formElements/RenderField';\nimport { RenderCheckBoxes } from './formElements/RenderCheckBoxes';\n\n/**\n * Component holding the simple search form\n * @param {*} props \n */\nlet SimpleSearch = (props) => {\n    const { handleSubmit, reset, /*initialize, destroy,*/ submitting, pristine, valid, onReset, onTypeToggle } = props;\n    const isLoading = useSelector(state => state.search.isLoading);\n\n    const onCombinedReset = (...args) => {\n        reset(...args);\n        // destroy(...args);\n        // initialize(...args);\n        onReset(...args);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <Container fluid>\n                <Row className=\"simpleSearchRow\">\n                    <Col xs lg={3} className=\"searchCell\">\n                        <label htmlFor=\"searchValue\">Search by:*</label>\n                        <Field name=\"searchValue\" component={RenderField}\n                            type=\"text\" label=\"search by\"\n                            validate={[required, lengthMin]} />\n                    </Col>\n                    <Col xs lg={5}>\n                        <Field name=\"filter\" id=\"filter\" component={RenderCheckBoxes} type=\"checkbox\" />\n                    </Col>\n                    <Col xs lg className=\"searchButtonsOuter\">\n                        <Button className=\"searchButton\" variant=\"secondary\" size=\"sm\" type=\"submit\" disabled={submitting || !valid || isLoading}>\n                            {isLoading ? 'Loading' : (<Search color=\"white\" size={16}></Search>)}\n                        </Button>\n                        <Button className=\"searchButton\" variant=\"secondary\" size=\"sm\" type=\"button\" disabled={submitting || isLoading || pristine}\n                            onClick={onCombinedReset}>Reset</Button>\n                    </Col>\n                    <Col xs lg className=\"modToggleOuter\">\n                        Advanced <span onClick={onTypeToggle}><ArrowDownSquareFill size={18}></ArrowDownSquareFill></span>\n                    </Col>\n                </Row>\n            </Container>\n        </form>\n    )\n\n}\n\n// Decorate the form component\nSimpleSearch = reduxForm({\n    destroyOnUnmount: false,\n    forceUnregisterOnUnmount: false,\n    // enableReinitialize: true, // !!!! enable if want to kill your PC !!! killed my Ryzen too!!\n    form: 'simpleSearch', // a unique name for this form\n    validate: validateSimpleForm\n})(SimpleSearch);\n\nSimpleSearch = connect(\n    state => ({\n        initialValues: state.form.simpleSearch\n    }), (dispatch) => {\n        return { change: change }\n    }\n)(SimpleSearch)\n\nexport default SimpleSearch;\n","import React from 'react';\n\n/**\n * Radio field for redux form\n * @param {*} param0 \n */\nexport const RenderRadio = ({ id, input, label, type, meta: { touched, error, warning } }) => (\n    <span>\n        <input {...input} id={id} type={type} />\n        <label htmlFor={id}>{label}</label>\n    </span>\n)","import React from 'react';\nimport { Field, reduxForm, change, formValueSelector } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Search, ArrowUpSquareFill, StarFill, ArrowDownUp } from 'react-bootstrap-icons';\nimport { useSelector } from \"react-redux\";\nimport { validateAdvancedForm } from '../formValidators';\nimport { RenderField } from './formElements/RenderField';\nimport { RenderCheckBoxes } from './formElements/RenderCheckBoxes';\nimport { RenderRadio } from './formElements/RenderRadio';\n\n/**\n * Component holding the advanced search form\n * @param {*} props \n */\nlet AdvancedSearch = (props) => {\n    const { handleSubmit, reset, submitting, pristine, valid, onReset, onTypeToggle, starsCheckedVal, sizeCheckedVal } = props;\n    const isLoading = useSelector(state => state.search.isLoading);\n\n    const onCombinedReset = (...args) => {\n        reset(...args);\n        onReset(...args);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <Container fluid>\n                <Row className=\"simpleSearchRow\">\n                    <Col xs lg={4} className=\"searchCell\">\n                        <label htmlFor=\"searchValue\">Search by: </label>\n                        <Field name=\"searchValue\" component={RenderField}\n                            type=\"text\" label=\"search by\" />\n                    </Col>\n                    <Col xs lg={6}>\n                        <Field name=\"filter\" id=\"filter\" component={RenderCheckBoxes} type=\"checkbox\" />\n                    </Col>\n                    <Col className=\"modToggleOuter\">\n                        Advanced <span onClick={onTypeToggle}><ArrowUpSquareFill size={18}></ArrowUpSquareFill></span>\n                    </Col>\n                </Row>\n                <Row className=\"simpleSearchRow\">\n                    <Col xs lg={4} className=\"searchCell\">\n                        <label htmlFor=\"user\">User name: </label>\n                        <Field name=\"user\" component={RenderField}\n                            type=\"text\" label=\"user name\" />\n                    </Col>\n                    <Col xs lg={6} className=\"langTopicOuter\">\n                        <span className=\"langTopic\">\n                            <label htmlFor=\"lang\">Language: </label>\n                            <Field name=\"lang\" component={RenderField}\n                                type=\"text\" label=\"language\" />\n                            <label htmlFor=\"topic\">Topic: </label>\n                            <Field name=\"topic\" component={RenderField}\n                                type=\"text\" label=\"topic\" />\n                        </span>\n                    </Col>\n                    <Col className=\"searchButtonsOuter\">\n                        <Button className=\"searchButton\" variant=\"secondary\" size=\"sm\" type=\"submit\" disabled={submitting || !valid || isLoading}>\n                            {isLoading ? 'Loading' : (<Search color=\"white\" size={16}></Search>)}\n                        </Button>\n                        <Button className=\"searchButton\" variant=\"secondary\" size=\"sm\" type=\"button\" disabled={submitting || isLoading || pristine}\n                            onClick={onCombinedReset}>Reset</Button>\n                    </Col>\n                </Row>\n                <Row className=\"simpleSearchRow\">\n                    <Col xs={4} className=\"searchCell\">\n                        <label htmlFor=\"org\">Organization: </label>\n                        <Field name=\"org\" component={RenderField}\n                            type=\"text\" label=\"organization\" />\n                    </Col>\n                    <Col>\n                    </Col>\n                    <Col>\n                    \n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs lg={6} className=\"starsFilterOuter\">\n                        <span className=\"starsFilter\">\n                            <StarFill color=\"yellow\" size={12}></StarFill>\n                            <span className=\"starsMainLabel\">Stars</span>\n                            <Field\n                                name=\"starCheck\"\n                                component={RenderRadio}\n                                value=\"equal\"\n                                id=\"starCheckEqual\"\n                                type=\"radio\"\n                                label=\"equal\"\n                            >\n                            </Field>\n                            <Field\n                                name=\"starCheck\"\n                                component={RenderRadio}\n                                value=\"greater\"\n                                id=\"starCheckgreat\"\n                                type=\"radio\"\n                                label=\"greater than\"\n                            >\n                            </Field>\n                            <Field\n                                name=\"starCheck\"\n                                component={RenderRadio}\n                                value=\"less\"\n                                id=\"starCheckLess\"\n                                type=\"radio\"\n                                label=\"less than\"\n                            >\n                            </Field>\n                            <Field\n                                name=\"starCheck\"\n                                component={RenderRadio}\n                                value=\"between\"\n                                id=\"starCheckBetween\"\n                                type=\"radio\"\n                                label=\"between\"\n                            >\n                            </Field>\n                            <span className=\"starsFilterNumberRow\">\n                                <label htmlFor=\"starsNumber\">{starsCheckedVal === 'between' ? 'Min: ' : 'Number: '} </label>\n                                <Field name=\"starsNumber\" component={RenderField}\n                                    type=\"text\" label=\"number\" />\n                                <label className={starsCheckedVal === 'between' ? '' : 'hiddenContent'}\n                                    htmlFor=\"starsMax\">\n                                    Max:\n                                </label>\n                                <Field className={starsCheckedVal === 'between' ? '' : 'hiddenContent'}\n                                    name=\"starsMax\" component={RenderField}\n                                    type=\"text\" label=\"number\" />\n                            </span>\n                        </span>\n                    </Col>\n                    <Col xs lg={6} className=\"sizeFilterOuter\">\n                        <span className=\"sizeFilter\">\n                            <ArrowDownUp color=\"lightblue\" size={12}></ArrowDownUp>\n                            <span className=\"sizeMainLabel\">Size</span>\n                            <Field\n                                name=\"sizeCheck\"\n                                component={RenderRadio}\n                                value=\"equal\"\n                                id=\"sizeCheckEqual\"\n                                type=\"radio\"\n                                label=\"equal\"\n                            >\n                            </Field>\n                            <Field\n                                name=\"sizeCheck\"\n                                component={RenderRadio}\n                                value=\"greater\"\n                                id=\"sizeCheckgreat\"\n                                type=\"radio\"\n                                label=\"greater than\"\n                            >\n                            </Field>\n                            <Field\n                                name=\"sizeCheck\"\n                                component={RenderRadio}\n                                value=\"less\"\n                                id=\"sizeCheckLess\"\n                                type=\"radio\"\n                                label=\"less than\"\n                            >\n                            </Field>\n                            <Field\n                                name=\"sizeCheck\"\n                                component={RenderRadio}\n                                value=\"between\"\n                                id=\"sizeCheckBetween\"\n                                type=\"radio\"\n                                label=\"between\"\n                            >\n                            </Field>\n                            <span className=\"sizeFilterNumberRow\">\n                                <label htmlFor=\"sizeNumber\">{sizeCheckedVal === 'between' ? 'Min: ' : 'Number: '} </label>\n                                <Field name=\"sizeNumber\" component={RenderField}\n                                    type=\"text\" label=\"number\" />\n                                <label className={sizeCheckedVal === 'between' ? '' : 'hiddenContent'}\n                                    htmlFor=\"sizeMax\">\n                                    Max:\n                                </label>\n                                <Field className={sizeCheckedVal === 'between' ? '' : 'hiddenContent'}\n                                    name=\"sizeMax\" component={RenderField}\n                                    type=\"text\" label=\"number\" />\n                            </span>\n                        </span>\n                    </Col>\n\n                    <Col>\n                        \n                    </Col>\n                </Row>\n            </Container>\n        </form>\n    )\n\n}\n\n// Decorate the form component\nAdvancedSearch = reduxForm({\n    destroyOnUnmount: false,\n    forceUnregisterOnUnmount: false,\n    // enableReinitialize: true, // enable if want to kill your PC !!!\n    form: 'simpleSearch', // a unique name for this form\n    validate: validateAdvancedForm\n})(AdvancedSearch);\n\nconst selector = formValueSelector('simpleSearch') // <-- same as form name\nAdvancedSearch = connect(\n    state => {\n        const starCheckValFromState = selector(state, 'starCheck');\n        const sizeCheckValFromState = selector(state, 'sizeCheck');\n        return {\n            initialValues: state.form.simpleSearch,\n            starsCheckedVal: starCheckValFromState,\n            sizeCheckedVal: sizeCheckValFromState,\n        }\n    }, (dispatch) => {\n        return { change: change }\n    }\n)(AdvancedSearch)\n\nexport default AdvancedSearch;\n","import parseLinkHeader from 'parse-link-header';\n\n/**\n * Initial state for the search state\n */\nexport const initialState = {\n    repos: [],\n    isloading: false,\n    searchHistory: [],\n    currPage: 1,\n    orderBy: 'desc',\n    sortBy: 'stars',\n    type: 'simple'\n};\n\n/**\n * Helper function to shorten and flatten repo values stored in state.\n*/\nconst itemTransformer = (item) => {\n    return {\n        name: item.name,\n        full_name: item.full_name,\n        html_url: item.html_url,\n        stars: item.stargazers_count,\n        forks: item.forks,\n        /*issues: item.open_issues_count,*/\n        language: item.language,\n        languages_url: item.languages_url,\n        owner: item.owner.login,\n        description: item.description,\n        created_at: item.created_at,\n        updated_at: item.updated_at,\n        owner_html_url: item.owner.html_url,\n        owner_avatar_url: item.owner.avatar_url\n    };\n};\n\n/**\n * Search reducer handling all general actions around search logic\n * @param {*} state \n * @param {*} action \n */\nconst searchReducer = (state = { ...initialState }, action) => {\n    switch (action.type) {\n        case \"SEARCH_START\":\n            // console.log(\"SEARCH START reducer\");\n            state = { ...state };\n            state.isLoading = true;\n            state.error = false;\n            break;\n        case \"SEARCH_FINISHED\":\n            // console.log(\"SEARCH FINISHED reducer\", action.payload);\n            /*console.groupCollapsed('%crepo items', 'background-color: transparent;font-size:20px; background: #222; color: #bada55');\n            console.table(action.payload.result.items.map((item) => {\n                return {\n                    name: item.name,\n                    full_name: item.full_name,\n                    stars: item.stargazers_count,\n                    watchers: item.watchers,\n                    forks: item.forks,\n                    issues: item.open_issues_count,\n                    lang: item.language,\n                    owner: item.owner.login,\n                    description: item.description,\n                    html_url: item.html_url\n                }\n            }).reduce((acc, { name, ...x }) => { acc[name] = x; return acc; }, {}));\n            console.groupEnd();*/\n            state = { ...state };\n            state.total = action.payload.result.total_count;\n            const repos = action.payload.result.items.map(item => itemTransformer(item));\n            state.repos = repos;\n            state.currPage = action.payload.currPage || initialState.currPage;\n            state.orderBy = action.payload.orderBy || initialState.orderBy;\n            state.sortBy = action.payload.sortBy || initialState.sortBy;\n            state.links = parseLinkHeader(action.payload.links);\n            if (state.links && state.links.last) {\n                state.lastPage = state.links.last.page;\n            } else {\n                state.lastPage = state.currPage;\n            }\n            state.searchHistory = [...state.searchHistory];\n            if (!action.payload.skipHistory) {\n                state.searchHistory.push({\n                    queryString: action.payload.queryString,\n                    repos: repos\n                });\n            }\n            state.isLoading = false;\n\n            state.url = action.payload.url;\n            break;\n        case \"SEARCH_ERROR\":\n            // console.log(\"SEARCH ERROR reducer\");\n            state = { ...state };\n            state.isLoading = false;\n            state.error = {};\n            if (action.payload.error && action.payload.error.response\n                && action.payload.error.response.status === 403) {\n                // console.log('Search Error Response', action.payload.error.response);\n                if (action.payload.error.response.data.message) {\n                    state.error.message = action.payload.error.response.data.message;\n                }\n                if (action.payload.error.response.headers['x-ratelimit-used']) {\n                    state.error.limitRemain = ' Limit remaining: ' + action.payload.error.response.headers['x-ratelimit-remaining'] + ' ';\n                    state.error.limitUsed = ' Limit used: ' + action.payload.error.response.headers['x-ratelimit-used'] + ' ';\n                    const currTime = Math.round((new Date()).getTime() / 1000);\n                    const resetTime = Number.parseInt(action.payload.error.response.headers['x-ratelimit-reset'], 10);\n                    // // console.log('Current time :' + currTime);\n                    // // console.log('Reset time :' + resetTime);\n                    state.error.remainingSecs = '  Please wait for ' + (resetTime - currTime) + ' seconds. ';\n                }\n            } else if (action.payload.error && action.payload.error.response\n                && action.payload.error.response.status === 422) {\n                // console.log('Search Error Response 422', action.payload.error.response);\n                if (action.payload.error.response.data.message) {\n                    state.error.errorType = action.payload.error.response.data.message;\n                }\n                if (action.payload.error.response.data.errors &&\n                    Array.isArray(action.payload.error.response.data.errors) &&\n                    action.payload.error.response.data.errors.length > 0 &&\n                    action.payload.error.response.data.errors[0] &&\n                    action.payload.error.response.data.errors[0].message) {\n                    state.error.message = action.payload.error.response.data.errors[0].message\n                }\n            } else {\n                if (action.payload.error && action.payload.error.message) {\n                    state.error.message = action.payload.error.message;\n                }\n            }\n\n            state.error.errorType = state.error.errorType || action.payload.customErrorType || 'Error loading data:';\n\n            break;\n        case \"SORTORDER_START\":\n            // console.log(\"SORTORDER START reducer\", action.payload);\n            state = { ...state };\n            state.isLoading = true;\n            state.error = false;\n            if (action.payload.orderBy) {\n                state.orderBy = action.payload.orderBy;\n            }\n            if (action.payload.sortBy) {\n                state.sortBy = action.payload.sortBy;\n            }\n            break;\n        case \"SORTORDER_FINISHED\":\n            // console.log(\"SORTORDER FINISHED reducer\", action.payload);\n            state = { ...state };\n            state.total = action.payload.result.total_count;\n            state.repos = action.payload.result.items.map(item => itemTransformer(item));\n            state.links = parseLinkHeader(action.payload.links);\n            state.searchHistory = [...state.searchHistory];\n            state.isLoading = false;\n            state.url = action.payload.url;\n            break;\n        case \"PAGER_START\":\n            // console.log(\"PAGER START reducer\", action.payload);\n            state = { ...state };\n            state.isLoading = true;\n            state.error = false;\n            break;\n        case \"PAGER_FINISHED\":\n            // console.log(\"PAGER FINISHED reducer\", action.payload);\n            state = { ...state };\n            state.total = action.payload.result.total_count;\n            state.repos = action.payload.result.items.map(item => itemTransformer(item));\n            state.links = parseLinkHeader(action.payload.links);\n            state.searchHistory = [...state.searchHistory];\n            state.isLoading = false;\n            state.url = action.payload.url;\n            if (action.payload.currPage) {\n                state.currPage = action.payload.currPage\n            }\n            break;\n        case \"INIT_STATE\":\n            // console.log(\"INIT_STATE reducer\", action.payload);\n            state = { ...state, repos: [] };\n            break;\n        case \"TYPE_TOGGLE\":\n            // console.log(\"TYPE_TOGGLE reducer\", action.payload);\n            state = { ...state };\n            state.type = action.payload.type || initialState.type;\n            break;\n        default:\n            // // console.log(\"default CASE reducer\", action.payload);\n            break;\n\n    }\n    return state;\n};\n\nexport default searchReducer;\n","import React from 'react';\nimport { withRouter } from 'react-router'\nimport { connect } from \"react-redux\";\nimport SimpleSearch from './SimpleSearch';\nimport AdvancedSearch from './AdvancedSearch';\nimport { initialState as searchInitState } from '../reducers/searchReducer';\nimport { getApiSearchResults, simpleSearchQuery, advancedSearchQuery } from '../gitQueryFunctions';\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\nimport { validateSimpleForm, validateAdvancedForm } from '../formValidators';\n\n/**\n * Component holding the search panel.\n * Class component just to show the old way before hooks getting popular.\n */\nclass SearchPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        // // console.log(\"props:\", props);\n        this.pageSize = props.pageSize || 10;\n        this.currPage = props.currPage || searchInitState.currPage;\n        this.sortBy = props.sortBy || searchInitState.sortBy;\n        this.orderBy = props.orderBy || searchInitState.orderBy;\n        this.type = props.type || searchInitState.type;\n    }\n\n    /**\n     * Simple form submit function\n     * @param {*} form \n     */\n    handleSimpleSubmit = (form) => {\n        // console.log('Simple search submit page_size: ' + this.pageSize);\n        const simpleFormErrors = validateSimpleForm(form);\n        // console.log('errors in simple form: ', simpleFormErrors);\n        if (Object.keys(simpleFormErrors).length !== 0) {\n            // this should never happen, but REDUX FORM sometimes just not runs VALIDATION after RESET button...\n            // console.log('%cMissing required search value!', 'font-size:20px; background: #BBB; color: red', form);\n            const errorMessage = simpleFormErrors[Object.keys(simpleFormErrors)[0]];\n            this.props.validationError(errorMessage);\n            return false;\n        }\n        this.props.startSearch();\n        // we need to load first page by search setting to default sort/order IMHO\n        this.props.searchClick(form,\n            this.pageSize,\n            searchInitState.currPage,\n            searchInitState.orderBy,\n            searchInitState.sortBy, false);\n    }\n\n    /**\n     * Advanced form submit funcion\n     * @param {*} form \n     */\n    handleAdvancedSubmit = (form) => {\n        // console.log('Advanced search submit page_size: ' + this.pageSize);\n        const advancedFormErrors = validateAdvancedForm(form);\n        // console.log('errors in advanced form: ', advancedFormErrors);\n        if (Object.keys(advancedFormErrors).length !== 0) {\n            // this should never happen, but REDUX FORM sometimes just not runs VALIDATION after RESET button...\n            // console.log('%cMissing required value!', 'font-size:20px; background: #BBB; color: red', form);\n            const errorMessage = advancedFormErrors[Object.keys(advancedFormErrors)[0]];\n            this.props.validationError(errorMessage);\n            return false;\n        }\n        this.props.startSearch();\n        // we need to load first page by search setting to default sort/order IMHO\n        this.props.searchClick(form,\n            this.pageSize,\n            searchInitState.currPage,\n            searchInitState.orderBy,\n            searchInitState.sortBy, true);\n    }\n\n    /**\n     * Toggling to Simple mode\n     */\n    changeTypeToSimple = () => {\n        // console.log('Change to simple!');\n        this.props.typeChange('simple');\n    }\n\n    /**\n     * Toggling to Advanced mode\n     */\n    changeTypeToAvanced = () => {\n        // console.log('Change to advanced!');\n        this.props.typeChange('advanced');\n    }\n\n    /**\n     * Reseting form should reset results,\n     * so we call it here.\n     * @param {*} form \n     */\n    handleReset = (form) => {\n        // console.log('RESET CLICK!', form);\n        this.props.initState();\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                <Row className='searchContainer'>\n                    <Col>\n                        {this.props.type === 'simple' ? <SimpleSearch onSubmit={this.handleSimpleSubmit} onReset={this.handleReset} onTypeToggle={this.changeTypeToAvanced} />\n                            : <AdvancedSearch onSubmit={this.handleAdvancedSubmit} onReset={this.handleReset} onTypeToggle={this.changeTypeToSimple} />}\n                    </Col>\n                </Row>\n                {this.props.isError ? (<Row>\n                    <Col>\n                        <Alert variant=\"danger\">\n                            {this.props.isError.errorType} <strong>{this.props.isError.message}</strong><br />\n                            {this.props.isError.limitRemain}\n                            {this.props.isError.limitUsed}\n                            {this.props.isError.remainingSecs}\n                        </Alert>\n                    </Col>\n                </Row>) : ('')}\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        orderBy: state.search.orderBy,\n        sortBy: state.search.sortBy,\n        currPage: state.search.currPage,\n        isError: state.search.error,\n        type: state.search.type\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        searchClick: (form, pageSize, loadPage, orderByParam, sortByParam, isAdvanced) => {\n            // console.log(\"searchForm, isAdvanced: \" + isAdvanced, form);\n            let gitQueryString;\n            if (isAdvanced) {\n                gitQueryString = advancedSearchQuery(form);\n            } else {\n                gitQueryString = simpleSearchQuery(form);\n            }\n            const encodedQuery = encodeURIComponent(gitQueryString);\n            // console.log('gitQueryString', gitQueryString);\n            return getApiSearchResults(encodedQuery, pageSize, loadPage, orderByParam, sortByParam).then(response => {\n                // console.log('SEARCH result', response);\n                if (response.status === 200) {\n                    // console.log('Pagination Links: ' + response.headers['link']);\n                    dispatch({\n                        type: \"SEARCH_FINISHED\",\n                        payload: {\n                            result: response.data,\n                            links: response.headers['link'],\n                            queryString: gitQueryString,\n                            currPage: loadPage,\n                            sortBy: sortByParam,\n                            orderBy: orderByParam,\n                            url: response.config.url\n                        }\n                    })\n                } else {\n                    dispatch({\n                        type: \"SEARCH_ERROR\",\n                        payload: {}\n                    })\n                }\n            }).catch(function (errorObj) {\n                // console.log('Error in search promise', errorObj);\n                dispatch({\n                    type: \"SEARCH_ERROR\",\n                    payload: { error: /*JSON.stringify(errorObj)*/ errorObj }\n                });\n            });\n        },\n        initState: () => {\n            // console.log(\"SearchForm initState\");\n            dispatch({\n                type: \"INIT_STATE\",\n                payload: {}\n            });\n        },\n        validationError: (errorMessage) => {\n            // console.log(\"Validation error\");\n            dispatch({\n                type: \"SEARCH_ERROR\",\n                payload: { \n                    customErrorType: 'Form validation error: ',\n                    error: { message: errorMessage}\n                } \n            });\n        },\n        typeChange: (newType) => {\n            // console.log(\" Search type chage to: \" + newType);\n            dispatch({\n                type: \"TYPE_TOGGLE\",\n                payload: { type: newType }\n            });\n        },\n        startSearch: () => dispatch({\n            type: \"SEARCH_START\",\n            payload: {}\n        })\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SearchPanel));","import axios from 'axios';\n\n/**\n * Loads search result form Git API.\n * @param {*} simpleQueryString \n * @param {*} pageSize \n * @param {*} currPage \n * @param {*} orderBy \n * @param {*} sortBy \n * \n * @returns Promise of Axios call\n */\nconst getApiSearchResults = (encodedQueryString, pageSize, currPage, orderBy, sortBy) => {\n    const url = `https://api.github.com/search/repositories?q=${encodedQueryString}&page=${currPage}&per_page=${pageSize}&sort=${sortBy}&order=${orderBy}`;\n    return axios.get(url)\n};\n\n/**\n * Generates query string for simple search form\n *  @param {*} form \n */\nconst simpleSearchQuery = (form) => {\n    let result = `${form.searchValue}${form.name ? ' in:name' : ''}${form.description ? ' in:description' : ''}${form.readme ? ' in:readme' : ''}`;\n    return result;\n}\n\n/**\n * Generates query string for advanced search form\n * @param {*} form \n */\nconst advancedSearchQuery = (form) => {\n    let result = '';\n\n    if (form.searchValue && form.searchValue.length > 2) {\n        result += `${form.searchValue}${form.name ? ' in:name' : ''}${form.description ? ' in:description' : ''}${form.readme ? ' in:readme' : ''}`;\n    }\n\n    if (form.user && form.user.length > 2) {\n        if (result.length > 0) {\n            result += ' ';\n        }\n        result += `user:${form.user}`;\n    }\n\n    if (form.org && form.org.length > 2) {\n        if (result.length > 0) {\n            result += ' ';\n        }\n        result += `org:${form.org}`;\n    }\n\n    if (form.lang && form.lang.length > 0) {\n        if (result.length > 0) {\n            result += ' ';\n        }\n        result += `language:${form.lang}`;\n    }\n\n    if (form.topic && form.topic.length > 2) {\n        if (result.length > 0) {\n            result += ' ';\n        }\n        result += `topic:${form.topic}`;\n    }\n\n    if (form.starCheck && form.starsNumber && form.starsNumber.length > 0 && !isNaN(Number(form.starsNumber))) {\n        if (result.length > 0) {\n            result += ' ';\n        }\n        if (form.starCheck === 'equal') {\n            result += `stars:${form.starsNumber}`;\n        } else if (form.starCheck === 'greater') {\n            result += `stars:>${form.starsNumber}`;\n        } else if (form.starCheck === 'less') {\n            result += `stars:<${form.starsNumber}`;\n        } else if (form.starCheck === 'between' &&\n            form.starsMax && form.starsMax.length > 0 && !isNaN(Number(form.starsMax))) {\n            result += `stars:${form.starsNumber}..${form.starsMax}`;\n        }\n    }\n\n    if (form.sizeCheck && form.sizeNumber && form.sizeNumber.length > 0 && !isNaN(Number(form.sizeNumber))) {\n        if (result.length > 0) {\n            result += ' ';\n        }\n        if (form.sizeCheck === 'equal') {\n            result += `size:${form.sizeNumber}`;\n        } else if (form.sizeCheck === 'greater') {\n            result += `size:>${form.sizeNumber}`;\n        } else if (form.sizeCheck === 'less') {\n            result += `size:<${form.sizeNumber}`;\n        } else if (form.sizeCheck === 'between' &&\n            form.sizeMax && form.sizeMax.length > 0 && !isNaN(Number(form.sizeMax))) {\n            result += `size:${form.sizeNumber}..${form.sizeMax}`;\n        }\n    }\n\n    return result;\n}\n\nexport { getApiSearchResults, simpleSearchQuery, advancedSearchQuery };\n","import React, { useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { Col, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/**\n * Component to show the language or fetch languages from API.\n * If fetched it should come from the loader state cache.\n * @param {*} props \n */\nfunction LangCell(props) {\n    const { language, langUrl } = props;\n    const langList = useSelector(state => state.loader[langUrl]);\n    const dispatch = useDispatch();\n    /**\n     * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n     * TODO: set it back to false if set to true !!!!\n     * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n     */\n    // eslint-disable-next-line\n    const [isFetchStarted, setFetchStarted] = useState(true);\n\n    useEffect(() => {\n        if (!langList && !isFetchStarted) {\n            setFetchStarted(true);\n            // console.log('Start fetching: ' + langUrl);\n            axios.get(langUrl).then(response => {\n                // console.log('langUrl result', response);\n                if (response.status === 200) {\n                    dispatch({\n                        type: \"URL_FETCHED\",\n                        payload: {\n                            data: response.data,\n                            url: langUrl\n                        }\n                    })\n                } else {\n                    // console.log('Error lang fetch!');\n                    // setTimeout(() =>{setFetchStarted(false);}, 1500+(Math.random() * (response.status) +1));\n                }\n            }).catch(function (errorObj) {\n                // console.log('Error in lang fetch', errorObj);\n                // setTimeout(() =>{setFetchStarted(false);}, 1000+(Math.random() * (500) +1));\n            });\n        }\n    }, [ dispatch, isFetchStarted, langList, langUrl])\n\n\n    return <Col className=\"repoColLangs\" xs={1}>\n        {!langList ? <Button variant=\"secondary\" size=\"sm\" disabled={true}>{language}</Button> : ''} \n        {(langList || []).map((lang, idx) => (\n            <Button variant=\"secondary\" key={idx} size=\"sm\" disabled={true}>{lang}</Button>\n        ))}\n    </Col>\n\n}\n\nexport default LangCell;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport LangCell from './LangCell';\nimport { Stars, Calendar, CalendarWeek } from 'react-bootstrap-icons';\n\n/**\n * Component for rendering a result repo item\n * @param {*} props \n */\nfunction RepoRow(props) {\n    return <Row className=\"repoRow\" key={props.keyProp}>\n        <Col className=\"repoColName\" xs={3}>\n            <div title={props.repo.name}>{props.repo.name}</div>\n            <a href={props.repo.html_url} target=\"blank\"><div title={props.repo.full_name} className=\"repoFullName\">{props.repo.full_name}</div></a>\n        </Col>\n\n        <Col className=\"repoColMeta\" xs={1}>\n            <div title=\"stars\"><Stars size={16}></Stars> {props.repo.stars}</div>\n            <div title=\"forks\"><img src={process.env.PUBLIC_URL +'/iconfinder_github-fork_83308.png'}></img> {props.repo.forks}</div>\n        </Col>\n\n\n        <Col className=\"repoColDesc\" xs={3}>\n            <p title={props.repo.description}>{props.repo.description}</p>\n        </Col>\n\n        <LangCell language={props.repo.language} langUrl={props.repo.languages_url}></LangCell>\n\n        <Col className=\"repoColDates\" xs={2}>\n            <div title=\"created at\"><Calendar size={16}></Calendar> {props.repo.created_at.substring(0, 10)}</div>\n            <div title=\"updated at\"><CalendarWeek size={16}></CalendarWeek> {props.repo.updated_at.substring(0, 10)}</div>\n        </Col>\n\n        <Col className=\"repoCol\" xs={1}>\n            By: {props.repo.owner}\n        </Col>\n\n        <Col className=\"repoColImg\" xs={1}>\n            <a href={props.repo.owner_html_url} target=\"blank\"><img alt={props.repo.owner} src={props.repo.owner_avatar_url} width=\"30px\"></img></a>\n        </Col>\n\n    </Row>\n}\n\nexport default RepoRow;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { RadioGroup, Radio } from 'react-radio-group'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from 'axios';\n\n/**\n * Component for the Sort/Order controls\n * @param {*} props \n */\nfunction SortControl(props) {\n    const totalResult = useSelector(state => state.search.total);\n    const orderBy = useSelector(state => state.search.orderBy);\n    const sortBy = useSelector(state => state.search.sortBy);\n    const url = useSelector(state => state.search.url);\n    const dispatch = useDispatch();\n\n    const sortChanged = (val) => {\n        // console.log('sortByChg', val);\n        dispatch({\n            type: \"SORTORDER_START\",\n            payload: { sortBy: val }\n        })\n        const newUrl = url.replace('&sort='+sortBy, '&sort='+val);\n        axios.get(newUrl).then(response => {\n            // console.log('SORT result', response);\n            if (response.status === 200) {\n                // console.log('Pagination Links: ' + response.headers['link']);\n                dispatch({\n                    type: \"SORTORDER_FINISHED\",\n                    payload: {\n                        result: response.data,\n                        links: response.headers['link'],\n                        url: response.config.url\n                    }\n                })\n            } else {\n                dispatch({\n                    type: \"SEARCH_ERROR\",\n                    payload: {}\n                })\n            }\n        }).catch(function (errorObj) {\n            // console.log('Error in search promise', errorObj);\n            dispatch({\n                type: \"SEARCH_ERROR\",\n                payload: { error: errorObj }\n            });\n        });\n        return true;\n    };\n\n    const orderChanged = (val) => {\n        // console.log('orderByChg', val);\n        dispatch({\n            type: \"SORTORDER_START\",\n            payload: { orderBy: val }\n        })\n        const newUrl = url.replace('&order='+orderBy, '&order='+val);\n        axios.get(newUrl).then(response => {\n            // console.log('ORDER result', response);\n            if (response.status === 200) {\n                // console.log('Pagination Links: ' + response.headers['link']);\n                dispatch({\n                    type: \"SORTORDER_FINISHED\",\n                    payload: {\n                        result: response.data,\n                        links: response.headers['link'],\n                        url: response.config.url\n                    }\n                })\n            } else {\n                dispatch({\n                    type: \"SEARCH_ERROR\",\n                    payload: {}\n                })\n            }\n        }).catch(function (errorObj) {\n            // console.log('Error in search promise', errorObj);\n            dispatch({\n                type: \"SEARCH_ERROR\",\n                payload: { error: errorObj }\n            });\n        });\n        return true;\n    };\n\n    return <Row className=\"sortOrderRow\">\n        <Col className=\"sortByCol\">\n            Sort by:\n            <RadioGroup name=\"sortBy\" selectedValue={sortBy} onChange={sortChanged}>\n                <Radio id=\"stars\" name=\"stars\" value=\"stars\" />\n                <label htmlFor=\"stars\">stars </label>\n                <Radio id=\"forks\" name=\"forks\" value=\"forks\" />\n                <label htmlFor=\"forks\">forks </label>\n            </RadioGroup>\n        </Col>\n        <Col className=\"orderByCol\">\n            Order by:\n            <RadioGroup name=\"orderBy\" selectedValue={orderBy} onChange={orderChanged}>\n                <Radio id=\"desc\" name=\"desc\" value=\"desc\" />\n                <label htmlFor=\"desc\">desc </label>\n                <Radio id=\"asc\" name=\"asc\" value=\"asc\" />\n                <label htmlFor=\"asc\">asc </label>\n            </RadioGroup>\n        </Col>\n        <Col className=\"totalResultCol\">\n            Total results: {totalResult}\n        </Col>\n    </Row>;\n\n}\n\nexport default SortControl;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ChevronBarLeft, ChevronLeft, ChevronRight, ChevronBarRight } from 'react-bootstrap-icons';\nimport axios from 'axios';\n\n/**\n * Component for pagination\n * @param {*} props \n */\nfunction PagerControl(props) {\n    const currPage = useSelector(state => state.search.currPage);\n    const lastPage = useSelector(state => state.search.lastPage || currPage);\n    const links = useSelector(state => state.search.links || []);\n    const dispatch = useDispatch();\n\n    const startPaging = (pageType) => {\n        // console.log('Loading page: ' + pageType);\n        const newUrl = links[pageType].url + '';\n        const newPage = links[pageType].page + '';\n        dispatch({\n            type: \"PAGER_START\",\n            payload: {}\n        })\n        axios.get(newUrl).then(response => {\n            // console.log('PAGER result', response);\n            if (response.status === 200) {\n                // console.log('Pagination Links: ' + response.headers['link']);\n                dispatch({\n                    type: \"PAGER_FINISHED\",\n                    payload: {\n                        result: response.data,\n                        links: response.headers['link'],\n                        url: response.config.url,\n                        currPage: newPage\n                    }\n                })\n            } else {\n                dispatch({\n                    type: \"SEARCH_ERROR\",\n                    payload: {}\n                })\n            }\n        }).catch(function (errorObj) {\n            // console.log('Error in search promise', errorObj);\n            dispatch({\n                type: \"SEARCH_ERROR\",\n                payload: { error: errorObj}\n            });\n        });\n        return true;\n    }\n\n    const onNextClicked = (event) => {\n        startPaging('next');\n    }\n\n    const onPrevClicked = (event) => {\n        startPaging('prev');\n    }\n\n    const onFirstClicked = (event) => {\n        startPaging('first');\n    }\n\n    const onLastClicked = (event) => {\n        startPaging('last');\n    }\n\n    return <Row className=\"pagerRow\">\n        <Col>\n        </Col>\n        <Col className=\"totalResultCol\">\n            <span className=\"totalResultCurrent\"> Current page: {currPage} of {lastPage} </span>\n            {links.first ? <span className=\"pagerButton\" onClick={onFirstClicked}>\n                <ChevronBarLeft color=\"white\" size={16}></ChevronBarLeft>\n                <br />\n                First\n            </span> : ''}\n            {links.prev ? <span className=\"pagerButton\" onClick={onPrevClicked}>\n                <ChevronLeft color=\"white\" size={16}></ChevronLeft>\n                <br />\n                Prev\n            </span> : ''}\n            {links.next ? <span className=\"pagerButton\" onClick={onNextClicked}>\n                <ChevronRight color=\"white\" size={16}></ChevronRight>\n                <br />\n                Next\n            </span> : ''}\n            {links.last ? <span className=\"pagerButton\" onClick={onLastClicked}>\n                <ChevronBarRight color=\"white\" size={16}></ChevronBarRight>\n                <br />\n                Last\n            </span> : ''}\n        </Col>\n    </Row>;\n\n}\n\nexport default PagerControl;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useSelector } from \"react-redux\";\nimport RepoRow from './RepoRow';\nimport SortControl from './SortControl';\nimport PagerControl from './PagerControl';\n\n/**\n * Component for result panel.\n * \n * Reusable to also display data from history\n * as gets the data from props.repos, not from state directly.\n * \n * If props.includeControls property is true it show the controls.\n * \n * @param {*} props\n */\nfunction ResultPanel(props) {\n    const isLoading = useSelector(state => state.search.isLoading);\n\n    const renderItems = () => (!props.repos || props.repos.length === 0) ? (\n        <div className=\"emptyResult\">\n            Search results are coming here\n        </div>\n    ) : <Container fluid className=\"repoList\">\n            {props.includeControls ? <SortControl></SortControl> : ''}\n            {props.repos.map((repo, repoIdx) => (\n                <RepoRow repo={repo} key={repoIdx} keyProp={repoIdx}></RepoRow>\n            ))}\n            {props.includeControls ? <PagerControl></PagerControl> : ''}\n        </Container>;\n\n    const spinningLoader = <div className=\"spinningLoader\"></div>\n\n    return <Container fluid>\n        <Row>\n            <Col className=\"resultCol justify-content-md-center\">\n                {isLoading ? spinningLoader : renderItems()}\n            </Col>\n        </Row>\n    </Container>\n}\n\nexport default (ResultPanel);","import { connect } from \"react-redux\";\nimport SearchPanel from '../SearchPanel';\nimport ResultPanel from '../ResultPanel';\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\n\n/**\n * Search page component holding search panel,\n * result panel and some error message containers.\n * \n * Paging size can be configured here for search panel.\n * @param {*} props \n */\nfunction SearchPage(props) {\n    return <Container className=\"container\" fluid>\n        <Row>\n            <Col>\n                <SearchPanel pageSize={8}></SearchPanel>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <ResultPanel repos={props.repos || []} includeControls={true}></ResultPanel>\n            </Col>\n        </Row>\n        {props.isError ? (<Row>\n            <Col>\n                <Alert variant=\"danger\">\n                    {props.isError.errorType} <strong>{props.isError.message}</strong><br />\n                </Alert>\n            </Col>\n        </Row>) : ('')}\n    </Container>;\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        repos: state.search.repos,\n        isError: state.search.error\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\n\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ResultPanel from '../ResultPanel';\n\n/**\n * History page coponent\n * @param {*} props \n */\nconst HistoryPage = (props) => {\n    const history = useSelector(state => state.search.searchHistory);\n    const selectedItems = useSelector(state => state.history.items);\n    const selectedIindex = useSelector(state => state.history.selectedIndex);\n    const dispatch = useDispatch();\n\n    return <div>\n        <Container className=\"historyContainer\" fluid>\n            <Row className=\"historyContainerRow\">\n                <Col className=\"historyLeft\" xs={2}>\n                    <div className=\"historyTotalReq\">\n                        Total requests: {history.length}\n                    </div>\n                    {history.map((item, mapIdx) => (\n                        <span key={mapIdx} className={mapIdx === selectedIindex ? 'historyItemSelected' : 'historyItem'}\n                            onClick={(event) => {\n                                // // console.log('click', event);\n                                dispatch({\n                                    type: 'HISTORY_SELECT',\n                                    payload: {\n                                        index: mapIdx,\n                                        items: item.repos\n                                    }\n                                });\n                                return true;\n                            }} >\n                            <textarea rows={5} maxLength={900} disabled={false} readOnly\n                                value={item.queryString}></textarea>\n                        </span>\n                    ))}\n                    <br />\n                </Col>\n                <Col className=\"historyRight\" xs={10}>\n                    <ResultPanel repos={selectedItems || []} includeControls={false}></ResultPanel>\n                </Col>\n            </Row>\n        </Container>\n    </div>;\n}\n\nexport default HistoryPage;\n\n","import React, { useEffect } from 'react';\nimport { Route, Switch, Redirect, BrowserRouter as Router } from 'react-router-dom';\nimport StickyNavbar from './StickyNavbar';\nimport SearchPage from './pages/SearchPage';\nimport HistoryPage from './pages/HistoryPage';\n\n\n/**\n * Main component holding the router and navbar\n * @param {*} props \n */\nfunction App(props) {\n  useEffect(() => {\n    document.title = \"Git Repo Search App\"\n }, []);\n\n  return (\n    <Router basename=\"/findrepo\">\n      <StickyNavbar></StickyNavbar>\n      <div className=\"mainContainer\">\n        <Switch>\n          <Route exact path=\"/\">\n              <Redirect to=\"/search\" />\n          </Route>\n          <Route path=\"/history\" component={HistoryPage} />\n          <Route path=\"/search\" component={SearchPage} />\n        </Switch>\n      </div>\n    </Router>\n  )\n};\n\nexport default App;\n","/**\n * Inital state for history data\n */\nexport const initialState = { items: [], selectedIndex: -1 };\n\n/**\n * Reducer handling history item selection\n * @param {*} state \n * @param {*} action \n */\nconst historyReducer = (state = { ...initialState }, action) => {\n    switch (action.type) {\n        case \"HISTORY_SELECT\":\n            // console.log(\"HISTORY_SELECT reducer\", action.payload );\n            state = { ...state };\n            state.items = action.payload.items;\n            state.selectedIndex = action.payload.index;\n            break;\n        default:\n            // // console.log(\"default CASE reducer\", action.payload);\n            break;\n\n    }\n    return state;\n};\n\nexport default historyReducer;\n","export const initialState = {};\n\n/**\n * Reducer to cache URL calls for languages list,\n * but could be used for general caching too.\n * @param {*} state \n * @param {*} action \n */\nconst loaderReducer = (state = { ...initialState }, action) => {\n    switch (action.type) {\n        case \"URL_FETCHED\":\n            // console.log(\"URL_FETCHED\", action.payload.url, action.payload.data);\n            state = { ...state };\n            state[action.payload.url] = Object.keys(action.payload.data);\n            break;\n        default:\n            // // console.log(\"default CASE reducer\", action.payload);\n            break;\n    }\n    return state;\n};\n\nexport default loaderReducer;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport App from './components/App';\nimport searchReducer, { initialState as searchInitState } from './reducers/searchReducer';\nimport historyReducer, { initialState as historyInitState } from './reducers/historyReducer';\nimport loaderReducer, { initialState as loaderInitState } from './reducers/loaderReducer';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/main.css';\n// import reportWebVitals from './reportWebVitals';\n\nconst reducers = {\n  search: searchReducer,\n  history: historyReducer,\n  loader: loaderReducer,\n  form: formReducer\n}\n\nconst reducer = combineReducers(reducers);\n\nconst store = createStore(reducer, {\n  search: searchInitState,\n  history: historyInitState,\n  loader: loaderInitState,\n  form: {\n    /**\n     * Searc form initial state here,\n     * as it hes its own reducer.\n     */\n    simpleSearch: {\n      searchValue: '',\n      name: true,\n      description: false,\n      readme: false,\n      starCheck: 'greater',\n      sizeCheck: 'greater'\n    }\n  }\n}, composeWithDevTools(applyMiddleware(thunk))\n);\n\nrender(<Provider store={store}>\n  <App />\n</Provider>\n  , document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(// console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}